--
-- PostgreSQL database dump
--

-- Dumped from database version 15.13 (Debian 15.13-1.pgdg120+1)
-- Dumped by pg_dump version 15.13 (Debian 15.13-1.pgdg120+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: actors; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.actors (
    id bigint NOT NULL,
    created_at timestamp(6) without time zone NOT NULL,
    updated_at timestamp(6) without time zone,
    birth_date date,
    name character varying(255)
);


ALTER TABLE public.actors OWNER TO postgres;

--
-- Name: actors_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.actors ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.actors_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: directors; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.directors (
    id bigint NOT NULL,
    created_at timestamp(6) without time zone NOT NULL,
    updated_at timestamp(6) without time zone,
    birth_date date,
    name character varying(255)
);


ALTER TABLE public.directors OWNER TO postgres;

--
-- Name: directors_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.directors ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.directors_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: movie_actor; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.movie_actor (
    movie_id bigint NOT NULL,
    actor_id bigint NOT NULL
);


ALTER TABLE public.movie_actor OWNER TO postgres;

--
-- Name: movies; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.movies (
    id bigint NOT NULL,
    created_at timestamp(6) without time zone NOT NULL,
    updated_at timestamp(6) without time zone,
    description character varying(255),
    genre character varying(255),
    release_date date,
    title character varying(255),
    director bigint
);


ALTER TABLE public.movies OWNER TO postgres;

--
-- Name: movies_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.movies ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.movies_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: reviews; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.reviews (
    id bigint NOT NULL,
    created_at timestamp(6) without time zone NOT NULL,
    updated_at timestamp(6) without time zone,
    comment character varying(255),
    rating double precision,
    movie bigint,
    userid bigint
);


ALTER TABLE public.reviews OWNER TO postgres;

--
-- Name: reviews_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.reviews ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.reviews_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: user_watchlist; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.user_watchlist (
    user_id bigint NOT NULL,
    movie_id bigint NOT NULL
);


ALTER TABLE public.user_watchlist OWNER TO postgres;

--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    id bigint NOT NULL,
    created_at timestamp(6) without time zone NOT NULL,
    updated_at timestamp(6) without time zone,
    email character varying(255),
    pass character varying(255),
    username character varying(255)
);


ALTER TABLE public.users OWNER TO postgres;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.users ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: actors; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.actors (id, created_at, updated_at, birth_date, name) FROM stdin;
2	2025-07-27 15:18:35.629427	2025-07-27 15:18:35.629437	1969-08-28	Jack Black
4	2025-07-27 15:20:29.526287	2025-07-27 15:20:29.526295	1988-06-02	Awkwafina
5	2025-07-27 21:06:01.171783	2025-07-27 21:06:01.171805	1993-07-08	David Corenswet
6	2025-07-27 21:06:41.103068	2025-07-27 21:06:41.103097	1990-07-12	Rachel Brosnahan
7	2025-07-27 21:07:29.271065	2025-07-27 21:07:29.271078	1989-12-07	Nicholas Hoult
8	2025-07-27 21:11:47.637761	2025-07-27 21:11:47.63777	1974-01-30	Christian Bale
9	2025-07-27 21:12:50.996765	2025-07-27 21:12:50.996793	1979-04-22	Heath Ledger
10	2025-07-27 21:13:23.718554	2025-07-27 21:13:23.718567	1968-03-12	Aaron Eckhart
11	2025-07-27 21:15:10.582632	2025-07-27 21:15:10.582641	1981-01-28	Elijah Wood
12	2025-07-27 21:15:54.731007	2025-07-27 21:15:54.731022	1958-10-20	Viggo Mortensen
13	2025-07-27 21:16:34.36463	2025-07-27 21:16:34.364641	1939-05-25	Ian McKellen
14	2025-07-27 21:19:31.351734	2025-07-27 21:19:31.351744	1963-12-18	Brad Pitt
15	2025-07-27 21:20:10.337655	2025-07-27 21:20:10.337669	1969-08-18	Edward Norton
16	2025-07-27 21:20:53.104616	2025-07-27 21:20:53.104626	1947-09-27	Meat Loaf
17	2025-07-29 09:50:57.113539	2025-07-29 09:50:57.113551	1940-04-25	Al Pacino
18	2025-07-29 09:51:45.908262	2025-07-29 09:51:45.908274	1931-01-05	Robert Duvall
19	2025-07-29 09:52:18.79844	2025-07-29 09:52:18.79846	1943-08-17	Robert De Niro
20	2025-07-29 09:54:14.650331	2025-07-29 09:54:14.65034	1905-06-16	Henry Fonda
21	2025-07-29 09:54:59.94093	2025-07-29 09:54:59.940941	1911-12-08	Lee J. Cobb
22	2025-07-29 09:55:39.26916	2025-07-29 09:55:39.269169	1919-11-04	Martin Balsam
23	2025-07-29 09:57:26.453488	2025-07-29 09:57:26.453496	1952-06-07	Liam Neeson
24	2025-07-29 09:58:14.822661	2025-07-29 09:58:14.82267	1962-12-22	Ralph Fiennes
25	2025-07-29 09:59:06.152941	2025-07-29 09:59:06.152949	1943-12-31	Ben Kingsley
26	2025-07-29 10:02:00.464353	2025-07-29 10:02:00.46436	1954-02-18	John Travolta
27	2025-07-29 10:02:46.927901	2025-07-29 10:02:46.927915	1970-04-29	Uma Thurman
28	2025-07-29 10:03:25.308191	2025-07-29 10:03:25.308204	1948-12-21	Samuel L. Jackson
29	2025-07-29 10:05:16.90533	2025-07-29 10:05:16.90534	1956-07-09	Tom Hanks
30	2025-07-29 10:06:04.81998	2025-07-29 10:06:04.820005	1966-04-08	Robin Wright
31	2025-07-29 10:06:34.910431	2025-07-29 10:06:34.910443	1955-03-17	Robin Wright
32	2025-07-29 10:31:44.476485	2025-07-29 10:31:44.476496	1964-09-02	Keanu Reeves
33	2025-07-29 10:32:47.264333	2025-07-29 10:32:47.264356	1961-07-30	Laurence Fishburne
34	2025-07-29 10:33:23.493784	2025-07-29 10:33:23.493794	1967-08-21	Carrie-Anne Moss
35	2025-07-29 10:34:39.877963	2025-07-29 10:34:39.877979	1969-11-04	Matthew McConaughey
36	2025-07-29 10:35:21.090617	2025-07-29 10:35:21.090624	1982-11-12	Anne Hathaway
37	2025-07-29 10:36:15.812645	2025-07-29 10:36:15.812654	1977-03-24	Jessica Chastain
38	2025-07-29 10:38:24.634502	2025-07-29 10:38:24.634514	1962-11-19	Jodie Foster
39	2025-07-29 10:39:59.996024	2025-07-29 10:39:59.996034	1937-12-31	Anthony Hopkins
40	2025-07-29 10:40:46.607163	2025-07-29 10:40:46.607174	1939-01-26	Scott Glenn
\.


--
-- Data for Name: directors; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.directors (id, created_at, updated_at, birth_date, name) FROM stdin;
2	2025-07-27 15:06:42.03188	2025-07-27 15:06:42.031904	1970-10-18	Mike Mitchel
3	2025-07-27 15:29:18.627475	2025-07-27 15:29:18.627498	1966-08-05	James Gunn
4	2025-07-27 15:32:47.822833	2025-07-27 15:32:47.822842	1970-07-30	Christopher Nolan
5	2025-07-27 15:34:15.011333	2025-07-27 15:34:15.011352	1961-10-10	Peter Jackson
6	2025-07-27 15:35:26.868758	2025-07-27 15:35:26.868766	1962-08-28	David Fincher
7	2025-07-28 22:28:31.720761	2025-07-28 22:28:31.720783	1924-06-25	Sidney Lumet
8	2025-07-28 22:29:45.148139	2025-07-28 22:29:45.148151	1939-05-07	Francis Ford Coppola
9	2025-07-28 22:31:33.207463	2025-07-28 22:31:33.207474	1946-12-18	Steven Spielberg
10	2025-07-28 22:33:38.353463	2025-07-28 22:33:38.353476	1963-03-27	Quentin Tarantino
11	2025-07-28 22:34:48.448432	2025-07-28 22:34:48.448445	1951-05-14	Robert Zemeckis
12	2025-07-28 22:35:27.930398	2025-07-28 22:35:27.930405	1965-06-21	Lana Wachowski
13	2025-07-28 22:36:08.077749	2025-07-28 22:36:08.077852	1970-07-30	Christopher Nolan
14	2025-07-28 22:36:48.77598	2025-07-28 22:36:48.775988	1944-02-22	Jonathan Demme
\.


--
-- Data for Name: movie_actor; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.movie_actor (movie_id, actor_id) FROM stdin;
2	4
2	2
3	6
3	7
3	5
4	9
4	10
4	8
5	12
5	13
5	11
6	15
6	16
6	14
7	17
7	18
7	19
8	20
8	21
8	22
9	23
9	24
9	25
10	26
10	27
10	28
11	29
11	30
11	31
12	32
12	33
12	34
13	35
13	36
13	37
14	38
14	39
14	40
\.


--
-- Data for Name: movies; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.movies (id, created_at, updated_at, description, genre, release_date, title, director) FROM stdin;
2	2025-07-27 15:09:15.271217	2025-07-27 15:09:15.271226	After Po is tapped to become the Spiritual Leader of the Valley of Peace, he needs to find and train a new Dragon Warrior, while a wicked sorceress plans to re-summon all the master villains whom Po has vanquished to the spirit realm.	Action	2024-03-14	Kung Fu Panda 4	2
3	2025-07-27 15:38:02.194999	2025-07-27 15:38:02.195008	Superman must reconcile his alien Kryptonian heritage with his human upbringing as reporter Clark Kent. As the embodiment of truth, justice and the human way he soon finds himself in a world that views these as old-fashioned.	Action , Sci-Fi	2025-07-10	Superman	3
4	2025-07-27 15:41:07.136895	2025-07-27 15:41:07.136901	When a menace known as the Joker wreaks havoc and chaos on the people of Gotham, Batman, James Gordon and Harvey Dent must work together to put an end to the madness.	Action , Crime , Thriller	2008-07-18	The Dark Knight	4
5	2025-07-27 15:59:27.503323	2025-07-27 15:59:27.503328	An insomniac office worker and a devil-may-care soap maker form an underground fight club that evolves into much more.	Crime , Drama , Thriller	1999-10-06	Fight Club	6
6	2025-07-27 16:00:23.91018	2025-07-27 16:00:23.910186	Gandalf and Aragorn lead the World of Men against Sauron's army to draw his gaze from Frodo and Sam as they approach Mount Doom with the One Ring.	Action , Fantasy , Adventure	2003-12-03	The Lord of the Rings: The Return of the King	5
7	2025-07-28 22:39:15.048786	2025-07-28 22:39:15.048805	The early life and career of Vito Corleone in 1920s New York City is portrayed, while his son, Michael, expands and tightens his grip on the family crime syndicate.	Dram , Tragedy , Crime	1974-12-18	The Godfather Part II	8
8	2025-07-28 22:40:44.875163	2025-07-28 22:40:44.87517	The jury in a New York City murder trial is frustrated by a single member whose skeptical caution forces them to more carefully consider the evidence before jumping to a hasty verdict.	Drama , Crime	1957-05-13	Angry Men	7
9	2025-07-28 22:42:36.683578	2025-07-28 22:42:36.683587	In German-occupied Poland during World War II, industrialist Oskar Schindler gradually becomes concerned for his Jewish workforce after witnessing their persecution by the Nazis.	Epic , History , Drama	1993-12-01	Schindler's List	9
10	2025-07-28 22:44:27.335054	2025-07-28 22:44:27.33506	The lives of two mob hitmen, a boxer, a gangster and his wife, and a pair of diner bandits intertwine in four tales of violence and redemption.	Crime , Drama	1994-05-21	Pulp Fiction	10
11	2025-07-28 22:46:03.834451	2025-07-28 22:46:03.834462	The history of the United States from the 1950s to the '70s unfolds from the perspective of an Alabama man with an IQ of 75, who yearns to be reunited with his childhood sweetheart.	Epic , Drama , Romance	1994-07-06	Forrest Gump	11
12	2025-07-29 09:42:10.869111	2025-07-29 09:42:10.869116	When a beautiful stranger leads computer hacker Neo to a forbidding underworld, he discovers the shocking truth--the life he knows is the elaborate deception of an evil cyber-intelligence.	Epic , Action , Sci-Fi	1999-03-31	The Matrix	12
13	2025-07-29 09:44:16.844562	2025-07-29 09:44:16.844568	When Earth becomes uninhabitable in the future, a farmer and ex-NASA pilot, Joseph Cooper, is tasked to pilot a spacecraft, along with a team of researchers, to find a new planet for humans.	Epic , Drama , Sci-Fi	2014-10-29	Interstellar	13
14	2025-07-29 09:46:23.625159	2025-07-29 09:46:23.625176	A young F.B.I. cadet must receive the help of an incarcerated and manipulative cannibal killer to help catch another serial killer, a madman who skins his victims.	Crime , Drama , Horror	1991-02-01	The Silence of the Lambs	14
\.


--
-- Data for Name: reviews; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.reviews (id, created_at, updated_at, comment, rating, movie, userid) FROM stdin;
1	2025-07-27 15:12:30.756679	2025-07-27 15:12:30.756684	Best movie bro 	8	2	1
2	2025-07-27 21:27:18.675009	2025-07-27 21:27:18.675018	That was awesome!	7	3	1
3	2025-07-27 21:27:56.95668	2025-07-27 21:27:56.956688	Woawwww!	9	4	1
4	2025-07-27 21:29:39.70489	2025-07-27 21:29:39.704894	One of my favorite movie!	9	5	1
5	2025-07-27 21:29:50.65251	2025-07-27 21:29:50.652537	awesommme	9	6	1
6	2025-07-29 13:25:51.527389	2025-07-29 13:25:51.527394	Woawww!	8	7	1
7	2025-07-29 13:26:22.214726	2025-07-29 13:26:22.21473	Amazing!	9	8	1
8	2025-07-29 13:27:21.950888	2025-07-29 13:27:21.950891	it was awesome!	7	9	1
9	2025-07-29 13:28:08.486652	2025-07-29 13:28:08.486656	it was awesome!	8	10	1
10	2025-07-29 13:28:42.130897	2025-07-29 13:28:42.130905	good movie	9	11	1
11	2025-07-29 13:29:20.923152	2025-07-29 13:29:20.923156	good movie!	8	12	1
12	2025-07-29 13:29:52.885703	2025-07-29 13:29:52.885708	good job!	9	13	1
13	2025-07-29 13:30:17.553526	2025-07-29 13:30:17.553529	good job!	9	14	1
\.


--
-- Data for Name: user_watchlist; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.user_watchlist (user_id, movie_id) FROM stdin;
1	5
1	2
1	3
1	4
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users (id, created_at, updated_at, email, pass, username) FROM stdin;
1	2025-07-27 15:12:18.462369	2025-07-27 15:12:18.462388	mitas@gmail.com	$2a$10$dRdxpskIvYOt6C6oP9WsEez87BliE69E.N4v0RbyvqPJ7les2DTb6	mitas
\.


--
-- Name: actors_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.actors_id_seq', 40, true);


--
-- Name: directors_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.directors_id_seq', 14, true);


--
-- Name: movies_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.movies_id_seq', 14, true);


--
-- Name: reviews_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.reviews_id_seq', 13, true);


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.users_id_seq', 5, true);


--
-- Name: actors actors_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.actors
    ADD CONSTRAINT actors_pkey PRIMARY KEY (id);


--
-- Name: directors directors_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.directors
    ADD CONSTRAINT directors_pkey PRIMARY KEY (id);


--
-- Name: movies movies_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.movies
    ADD CONSTRAINT movies_pkey PRIMARY KEY (id);


--
-- Name: reviews reviews_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reviews
    ADD CONSTRAINT reviews_pkey PRIMARY KEY (id);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: user_watchlist fk1a2sf5ha20f8a3sqgo3n4h3w6; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_watchlist
    ADD CONSTRAINT fk1a2sf5ha20f8a3sqgo3n4h3w6 FOREIGN KEY (user_id) REFERENCES public.users(id);


--
-- Name: reviews fk2pjwoh8q2pif5l9cr0cp6ilrx; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reviews
    ADD CONSTRAINT fk2pjwoh8q2pif5l9cr0cp6ilrx FOREIGN KEY (movie) REFERENCES public.movies(id);


--
-- Name: movie_actor fk90bbe6vpr6eoahw20ta95nkta; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.movie_actor
    ADD CONSTRAINT fk90bbe6vpr6eoahw20ta95nkta FOREIGN KEY (movie_id) REFERENCES public.movies(id);


--
-- Name: user_watchlist fk9fhbuf2rh3u2d0citgjx86id9; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_watchlist
    ADD CONSTRAINT fk9fhbuf2rh3u2d0citgjx86id9 FOREIGN KEY (movie_id) REFERENCES public.movies(id);


--
-- Name: reviews fke0hlob2fbf7wug4lgi2boiyxf; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reviews
    ADD CONSTRAINT fke0hlob2fbf7wug4lgi2boiyxf FOREIGN KEY (userid) REFERENCES public.users(id);


--
-- Name: movies fkhvjbt5bqdi3pfjw6eehp73g33; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.movies
    ADD CONSTRAINT fkhvjbt5bqdi3pfjw6eehp73g33 FOREIGN KEY (director) REFERENCES public.directors(id);


--
-- Name: movie_actor fkr5wsak3io275nfc8jc5mtup2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.movie_actor
    ADD CONSTRAINT fkr5wsak3io275nfc8jc5mtup2 FOREIGN KEY (actor_id) REFERENCES public.actors(id);


--
-- PostgreSQL database dump complete
--

