type MovieResponse
{
    id: Int!
    title:String!
    releaseDate:Date!
    genre:String
    description:String
    directorId:Int
}
input MovieInput
{
    title:String!
    releaseDate:Date!
    genre:String
    description:String
    directorId:Int
}
extend type Query
{
    getMovie(id : Int!) : MovieResponse
    getAllMovies : [MovieResponse!]!
    searchMovieByName(name : String) : [MovieResponse!]!
    sortMovieByDescName : [MovieResponse!]!
    sortMovieByBetterReviewPoint : [MovieResponse!]!
    showAllActorsInMovie(movieId : Int!) : [ActorResponse!]!
    findAverageRankingInMovie(movieId : Int!) : Int!
}
extend type Mutation
{
    createMovie(input : MovieInput!) : MovieResponse
    deleteMovie(id : Int!) : Boolean
    updateMovie(id : Int!, input :MovieInput! ) : MovieResponse
    addActorInMovie(movieId: Int!, actorId: Int!) : [ActorResponse!]!
    removeActorInMovie(movieId:Int!, actorId : Int!) : [ActorResponse!]!
}